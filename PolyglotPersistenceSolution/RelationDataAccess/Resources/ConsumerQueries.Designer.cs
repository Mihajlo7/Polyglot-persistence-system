//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RelationDataAccess.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConsumerQueries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConsumerQueries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RelationDataAccess.Resources.ConsumerQueries", typeof(ConsumerQueries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT u.id AS Id, u.email AS Email, c.firstName FirstName, c.lastName LastName, c.birthDate BirthDate, c.telephone Telephone,
        ///cc.number CreditCardNumber, cc.cardType CreditCardType, cf.friendId FriendId, cf.friendshipLevel FriendshipLevel, cf.establishedDate FriendEstablishedDate  
        ///FROM Users u
        ///INNER JOIN Consumers c ON (u.id=c.id)
        ///INNER JOIN CreditCard cc ON (cc.consumerId=c.id)
        ///LEFT JOIN ConsumerFriends cf ON (cf.consumerId=c.id)
        ///WHERE u.email=@Email;
        ///.
        /// </summary>
        internal static string GetByEmail {
            get {
                return ResourceManager.GetString("GetByEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    u.id AS Id,
        ///    u.email AS Email,
        ///    c.firstName AS FirstName,
        ///    c.lastName AS LastName,
        ///    c.birthDate AS BirthDate,
        ///    c.telephone AS Telephone,
        ///    cc.number AS CreditCardNumber,
        ///    cc.cardType AS CreditCardType,
        ///    cf.friendId AS FriendId,
        ///    cf.friendshipLevel AS FriendshipLevel,
        ///    cf.establishedDate AS FriendEstablishedDate,
        ///    cfu.friendUserId,
        ///    cfu.friendEmail,
        ///    cfu.friendName,
        ///    cfu.FriendLastName,
        ///    cfu.FriendBirthDate,
        ///    cfu.telephone AS FriendT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetById {
            get {
                return ResourceManager.GetString("GetById", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    u.id AS Id,
        ///    u.email AS Email,
        ///    c.firstName AS FirstName,
        ///    c.lastName AS LastName,
        ///    c.birthDate AS BirthDate,
        ///    c.telephone AS Telephone,
        ///    cc.number AS CreditCardNumber,
        ///    cc.cardType AS CreditCardType,
        ///    cf.friendId AS FriendId,
        ///    cf.friendshipLevel AS FriendshipLevel,
        ///    cf.establishedDate AS FriendEstablishedDate,
        ///    cfu.friendUserId,
        ///    cfu.friendEmail,
        ///    cfu.friendName,
        ///    cfu.FriendLastName,
        ///    cfu.FriendBirthDate,
        ///    cfu.telephone AS FriendT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetConsumerByFriendEmail {
            get {
                return ResourceManager.GetString("GetConsumerByFriendEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    u.id AS Id,
        ///    u.email AS Email,
        ///    c.firstName AS FirstName,
        ///    c.lastName AS LastName,
        ///    c.birthDate AS BirthDate,
        ///    c.telephone AS Telephone,
        ///    cc.number AS CreditCardNumber,
        ///    cc.cardType AS CreditCardType,
        ///    cf.friendId AS FriendId,
        ///    cf.friendshipLevel AS FriendshipLevel,
        ///    cf.establishedDate AS FriendEstablishedDate,
        ///    cfu.friendUserId,
        ///    cfu.friendEmail,
        ///    cfu.friendName,
        ///    cfu.FriendLastName,
        ///    cfu.FriendBirthDate,
        ///    cfu.telephone AS FriendT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetConsumersByEmailAndFriendshipLevel {
            get {
                return ResourceManager.GetString("GetConsumersByEmailAndFriendshipLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT u.*, c.*, cc.*, cf.*, cfu.friendUserId, cfu.friendEmail, cfu.friendName, cfu.FriendLastName,cfu.FriendBirthDate,cfu.telephone
        ///FROM Users u
        ///INNER JOIN Consumers c ON u.id = c.id
        ///INNER JOIN CreditCard cc ON cc.consumerId = c.id
        ///LEFT JOIN ConsumerFriends cf ON cf.consumerId = c.id
        ///OUTER APPLY
        ///(
        ///	SELECT u1.id AS friendUserId, u1.email AS friendEmail,  -- kolone iz Users sa aliasom
        ///	       c1.id AS friendConsumerId, c1.firstName AS friendName,c1.lastName AS FriendLastName, c1.birthDate FriendBirth [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JoinPlain {
            get {
                return ResourceManager.GetString("JoinPlain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///    u.id AS Id,
        ///    u.email AS Email,
        ///    c.firstName AS FirstName,
        ///    c.lastName AS LastName,
        ///    c.birthDate AS BirthDate,
        ///    c.telephone AS Telephone,
        ///    cc.number AS CreditCardNumber,
        ///    cc.cardType AS CreditCardType,
        ///    cf.friendId AS FriendId,
        ///    cf.friendshipLevel AS FriendshipLevel,
        ///    cf.establishedDate AS FriendEstablishedDate,
        ///    cfu.friendUserId,
        ///    cfu.friendEmail,
        ///    cfu.friendName,
        ///    cfu.FriendLastName,
        ///    cfu.FriendBirthDate,
        ///    cfu.telephone AS FriendT [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JoinWithNames {
            get {
                return ResourceManager.GetString("JoinWithNames", resourceCulture);
            }
        }
    }
}
