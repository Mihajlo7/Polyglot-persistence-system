//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.Scripts {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SetupSQLQueiries {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SetupSQLQueiries() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Services.Scripts.SetupSQLQueiries", typeof(SetupSQLQueiries).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE OR ALTER PROC CreateSeller
        ///    @CompanyId BIGINT,
        ///    @DunsNumber NVARCHAR(100),
        ///    @Name NVARCHAR(100), 
        ///    @Telephone NVARCHAR(100),
        ///    @Country NVARCHAR(50),
        ///    @Address NVARCHAR(255),
        ///    @City NVARCHAR(100),
        ///    @HasShop BIT
        ///AS
        ///BEGIN
        ///    SET NOCOUNT ON;
        ///    
        ///    INSERT INTO Companies (id, dunsNumber, name, telephone, country) 
        ///    VALUES (@CompanyId, @DunsNumber, @Name, @Telephone, @Country);
        ///
        ///    INSERT INTO Sellers (id, address, city, hasShop) 
        ///    VALUES (@CompanyId, @Add [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CompanySP {
            get {
                return ResourceManager.GetString("CompanySP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GO
        ///CREATE PROCEDURE CreateUser
        ///    @Id BIGINT,
        ///    @Email NVARCHAR(100),
        ///    @Password NVARCHAR(255),
        ///    @FirstName NVARCHAR(255),
        ///    @LastName NVARCHAR(255),
        ///    @BirthDate DATE,
        ///    @Telephone VARCHAR(20),
        ///    @CreditCard1Id BIGINT,
        ///    @CreditCardType1 NVARCHAR(20),
        ///	@CreditCardNumber1 NVARCHAR(50),
        ///    @CreditCard2Id BIGINT,
        ///	@CreditCardType2 NVARCHAR(20),
        ///	@CreditCardNumber2 NVARCHAR(50)
        ///AS
        ///BEGIN
        ///    SET NOCOUNT ON;
        ///
        ///    INSERT INTO Users (id, email, passwordHash, passwordSalt)
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConsumersSP {
            get {
                return ResourceManager.GetString("ConsumersSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DROP TYPE IF EXISTS ChartProductType;
        ///GO
        ///
        ///CREATE TYPE ChartProductType AS TABLE(
        ///	ProductId BIGINT
        ///);
        ///GO
        ///
        ///CREATE OR ALTER PROC CreateChart
        ///	@Products ChartProductType READONLY,
        ///	@ConsumerId BIGINT
        ///AS
        ///BEGIN
        ///	SET NOCOUNT ON;
        ///	DECLARE @ChartId BIGINT= NEXT VALUE FOR cha
        ///	INSERT INTO Charts (id,status,createdAt,updatedAt) VALUES (@ChartId,1,GETDATE(),GETDATE());
        ///
        ///	INSERT INTO ChartItems(chartId,productId,createdAt)
        ///	SELECT @ChartId,ProductId,GETDATE()
        ///	FROM @Products;
        ///END;
        ///GO
        ///
        ///CREATE OR A [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OrderSP {
            get {
                return ResourceManager.GetString("OrderSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///CREATE OR ALTER PROCEDURE  CreateProduct
        ///    @ProductId BIGINT,
        ///    @ProductDetailId BIGINT,
        ///    @ProductName NVARCHAR(100),
        ///    @Price DECIMAL(10, 2),
        ///    @SubCategoryName NVARCHAR(50),
        ///    @ProducedBy BIGINT,
        ///    @StoreId BIGINT = NULL,
        ///    @ShortDescription NVARCHAR(255) = NULL,
        ///    @ImageUrl NVARCHAR(255),
        ///    @ProductType NVARCHAR(50), -- Tip proizvoda (&apos;Car&apos;, &apos;Device&apos;, &apos;Movie&apos;, &apos;Mobile&apos;, &apos;Laptop&apos;)
        ///    @DistributeProducts DistributeProductType READONLY, -- Lista companyId vrednosti za Dist [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProductsSP {
            get {
                return ResourceManager.GetString("ProductsSP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///
        ///-- Create Sequences --
        ///
        ///CREATE SEQUENCE users_seq AS BIGINT START WITH 1000000 INCREMENT BY 1 NO CYCLE;
        ///CREATE SEQUENCE credit_card_seq AS BIGINT START WITH 2000000 INCREMENT BY 1 NO CYCLE;
        ///CREATE SEQUENCE company_seq AS BIGINT START WITH 3000000 INCREMENT BY 1 NO CYCLE;
        ///CREATE SEQUENCE category_seq AS BIGINT START WITH 100 INCREMENT BY 5 NO CYCLE;
        ///CREATE SEQUENCE sub_category_seq AS BIGINT START WITH 1 INCREMENT BY 5 NO CYCLE;
        ///CREATE SEQUENCE product_seq AS BIGINT START WITH 4000000 INCREMENT BY [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tables {
            get {
                return ResourceManager.GetString("Tables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TRIGGER trgUpdateTotalOnInsertOrDelete
        ///ON ChartItems
        ///AFTER INSERT, DELETE
        ///AS
        ///BEGIN
        ///	DECLARE @total DECIMAL(10,2)
        ///
        ///	SELECT @total= COALESCE(SUM(p.price),0)
        ///	FROM ChartItems ci INNER JOIN ProductsHeader p ON ci.productId=p.ProductId;
        ///
        ///	UPDATE c
        ///	SET c.total=@total
        ///	FROM Charts c
        ///	WHERE c.id IN (
        ///		SELECT chartId FROM inserted
        ///		UNION
        ///		SELECT chartid FROM deleted
        ///	);
        ///END;
        ///.
        /// </summary>
        internal static string Triggers {
            get {
                return ResourceManager.GetString("Triggers", resourceCulture);
            }
        }
    }
}
